{"version":3,"sources":["component/Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","date","Date","timerId","setInterval","this","setState","console","log","toLocaleTimeString","prev","props","randomName","clearInterval","React","Component","App","isClockVisible","randomNumber","Math","floor","random","hide","value","className","type","onClick","ReactDOM","render","document","getElementById"],"mappings":"sNAYaA,EAAb,4MACEC,MAAQ,CACNC,KAAM,IAAIC,MAFd,EAKEC,QAAwBC,aAAY,eALtC,uDAOE,WAAqB,IAAD,OAClBC,KAAKF,QAAUC,aAAY,WACzB,EAAKE,SAAS,CAAEL,KAAM,IAAIC,OAG5BK,QAAQC,IAAI,EAAKR,MAAMC,KAAKQ,wBACzB,OAbP,gCAgBE,SAAmBC,GACbL,KAAKM,MAAMC,aAAeF,EAAKE,YAEjCL,QAAQC,IAAR,qCAA0CE,EAAKE,WAA/C,eAAgEP,KAAKM,MAAMC,eAnBjF,kCAuBE,WACEC,cAAcR,KAAKF,WAxBvB,oBA2BE,WACE,OACE,mCACGE,KAAKL,MAAMC,KAAKQ,2BA9BzB,GAA2BK,IAAMC,WCPpBC,EAAb,4MACEhB,MAAQ,CACNiB,gBAAgB,EAChBL,WAAY,GAHhB,EAMEM,aAAe,WACb,EAAKZ,SAAS,CAAEM,WAAYO,KAAKC,MAAsB,GAAhBD,KAAKE,aAPhD,EAUEC,KAAO,SAACC,GACN,EAAKjB,SAAS,CAAEW,eAAgBM,KAXpC,4CAcE,WAAU,IAAD,OACP,OACE,sBAAKC,UAAU,MAAf,UACE,oBAAIA,UAAU,aAAd,yBACA,4CAEGnB,KAAKL,MAAMY,cAEd,oBAAGY,UAAU,aAAa,UAAQ,OAAlC,UACE,sBAAMA,UAAU,YAAhB,2BACEnB,KAAKL,MAAMiB,gBACX,cAAC,EAAD,CAAOL,WAAYP,KAAKL,MAAMY,gBAGlC,wBACEY,UAAU,cACVC,KAAK,SACLC,QAAS,kBAAM,EAAKJ,MAAK,IAH3B,wBAOA,wBACEE,UAAU,cACVC,KAAK,SACLC,QAAS,kBAAM,EAAKJ,MAAK,IAH3B,wBAOA,wBACEE,UAAU,cACVC,KAAK,SACLC,QAAS,kBAAM,EAAKR,gBAHtB,oCA1CR,GAAyBJ,IAAMC,WAsDhBC,ICxDfW,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.87277a4e.chunk.js","sourcesContent":["/* eslint-disable no-console */\n/* eslint-disable @typescript-eslint/no-unused-vars */\nimport React from 'react';\n\ntype Prop = {\n  randomName: number,\n};\n\ntype State = {\n  date: Date,\n};\n\nexport class Clock extends React.Component<Prop, State> {\n  state = {\n    date: new Date(),\n  };\n\n  timerId: NodeJS.Timer = setInterval(() => {});\n\n  componentDidMount() {\n    this.timerId = setInterval(() => {\n      this.setState({ date: new Date() });\n\n      // eslint-disable-next-line\n    console.log(this.state.date.toLocaleTimeString());\n    }, 1000);\n  }\n\n  componentDidUpdate(prev: Prop) {\n    if (this.props.randomName !== prev.randomName) {\n      // eslint-disable-next-line\n      console.log(`The Clock was renamed from ${prev.randomName} to ${this.props.randomName}`)\n    }\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timerId);\n  }\n\n  render() {\n    return (\n      <>\n        {this.state.date.toLocaleTimeString()}\n      </>\n    );\n  }\n}\n","/* eslint-disable max-len */\nimport React from 'react';\nimport './App.scss';\nimport { Clock } from './component/Clock';\n\nexport class App extends React.Component {\n  state = {\n    isClockVisible: true,\n    randomName: 0,\n  };\n\n  randomNumber = () => {\n    this.setState({ randomName: Math.floor(Math.random() * 10) });\n  };\n\n  hide = (value:boolean) => {\n    this.setState({ isClockVisible: value });\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1 className=\"App__title\">React clock</h1>\n        <p>\n          Clock Name:\n          {this.state.randomName}\n        </p>\n        <p className=\"App__clock\" data-cy=\"time\">\n          <span className=\"App__span\">Current time:</span>\n          { this.state.isClockVisible && (\n            <Clock randomName={this.state.randomName} />\n          )}\n        </p>\n        <button\n          className=\"App__button\"\n          type=\"button\"\n          onClick={() => this.hide(true)}\n        >\n          Show Clock\n        </button>\n        <button\n          className=\"App__button\"\n          type=\"button\"\n          onClick={() => this.hide(false)}\n        >\n          Hide Clock\n        </button>\n        <button\n          className=\"App__button\"\n          type=\"button\"\n          onClick={() => this.randomNumber()}\n        >\n          Set random name\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}